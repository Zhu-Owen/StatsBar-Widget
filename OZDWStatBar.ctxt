#BlueJ class context
comment0.target=OZDWStatBar
comment0.text=\r\n\ OZDWStatBar\ is\ a\ Greenfoot\ actor\ that\ displays\ a\ pair\ of\ stat\ bars\ with\ their\ individual\ features.\r\n\ The\ first\ stat\ bar\ is\ a\ rectangular\ bar\ that\ is\ intended\ to\ be\ used\ as\ an\ HP/Shield\ bar,\ but\r\n\ it\ can\ be\ used\ for\ other\ applicable\ uses.\ The\ other\ is\ a\ circular\ bar\ that\ displays\ a\ \r\n\ percentage\ value\ in\ the\ middle\ as\ well\ as\ some\ ticks\ to\ provide\ a\ visual\ representation\r\n\ of\ the\ percentage.\ It\ is\ intended\ to\ be\ an\ ability\ charge\ bar,\ but\ can\ also\ be\ used\ for\r\n\ other\ purposes.\ The\ two\ bars\ have\ their\ own\ separate\ values.\r\n\ <p>\r\n\ The\ purpose\ of\ this\ class\ is\ to\ provide\ a\ well\ integrated\ statistical\ bar\ that\ can\ help\r\n\ provide\ visuals\ for\ their\ abilities\ and\ any\ type\ of\ numerical\ bar\ that\ is\ required.\ This\r\n\ can\ provide\ a\ programmer\ easy\ access\ to\ a\ stats\ bar\ that\ is\ typically\ used\ in\ a\ RPG\ game.\r\n\ <p>\r\n\ This\ class\ contains\ accessor\ (getter)\ and\ setter\ (update)\ methods.\r\n\ \r\n\ \r\n\ @author\ Daniel\ Wei\ &\ Owen\ Zhu\r\n\ @version\ March\ 11,\ 2020\r\n
comment1.params=
comment1.target=OZDWStatBar()
comment1.text=\r\n\ Creates\ a\ generic\ OZDWStatBar\ with\ default\ dimensions\ and\ values.\r\n
comment2.params=width\ height\ borderWidth\ hpVal\ maxHpVal\ chargeVal\ maxChargeVal
comment2.target=OZDWStatBar(int,\ int,\ int,\ int,\ int,\ int,\ int)
comment2.text=\r\n\ Creates\ an\ OZDWStatBar\ of\ the\ dimensions\ specified\ and\ with\ the\ values\ specified.\ All\ values\ must\ not\ be\ negative.\r\n\ \r\n\ @param\ width\ Width\ of\ the\ rectangular\ bar\ portion\ of\ the\ stat\ bar.\r\n\ @param\ height\ Height\ of\ the\ rectangular\ bar\ portion\ of\ the\ stat\ bar\ (diameter\ of\ the\ circular\ bar\ will\ be\ twice\ this\ height).\r\n\ @param\ borderWidth\ Width\ of\ the\ border\ surrounding\ the\ rectangular\ bar\ portion\ of\ the\ stat\ bar.\r\n\ @param\ hpVal\ Initial/starting\ value\ for\ the\ rectangular\ bar.\r\n\ @param\ maxHpVal\ Maximum\ possible\ value\ for\ the\ rectangular\ bar.\r\n\ @param\ chargeVal\ Initial/starting\ value\ for\ the\ circular\ bar.\r\n\ @param\ maxChargeVal\ Maximum\ possible\ value\ for\ the\ circular\ bar.\r\n
comment3.params=width\ height\ borderWidth\ hpVal\ maxHpVal\ chargeVal\ maxChargeVal\ filledColor\ emptyColor\ borderColor\ updateDownColor\ updateUpColor\ txtColor
comment3.target=OZDWStatBar(int,\ int,\ int,\ int,\ int,\ int,\ int,\ greenfoot.Color,\ greenfoot.Color,\ greenfoot.Color,\ greenfoot.Color,\ greenfoot.Color,\ greenfoot.Color)
comment3.text=\r\n\ Creates\ an\ OZDWStatBar\ with\ the\ dimensions\ and\ values\ specified.\ All\ values\ must\ not\ be\ negative.\r\n\ Colors\ are\ also\ specified\ but\ only\ apply\ to\ the\ rectangular\ bar\ portion.\r\n\ \r\n\ @param\ width\ Width\ of\ the\ rectangular\ bar\ portion\ of\ the\ stat\ bar.\r\n\ @param\ height\ Height\ of\ the\ rectangular\ bar\ portion\ of\ the\ stat\ bar\ (diameter\ of\ the\ circular\ bar\ will\ be\ twice\ this\ height).\r\n\ @param\ borderWidth\ Width\ of\ the\ border\ surrounding\ the\ rectangular\ bar\ portion\ of\ the\ stat\ bar.\r\n\ @param\ hpVal\ Initial/starting\ value\ for\ the\ rectangular\ bar.\r\n\ @param\ maxHpVal\ Maximum\ possible\ value\ for\ the\ rectangular\ bar.\r\n\ @param\ chargeVal\ Initial/starting\ value\ for\ the\ circular\ bar.\r\n\ @param\ maxChargeVal\ Maximum\ possible\ value\ for\ the\ circular\ bar.\r\n\ @param\ filledColor\ Colour\ for\ the\ filled\ up\ portion\ of\ the\ rectangular\ bar.\r\n\ @param\ emptyColor\ Colour\ for\ the\ empty\ portion\ of\ the\ rectangular\ bar.\r\n\ @param\ borderColor\ Colour\ for\ the\ border\ surrounding\ the\ rectangular\ bar.\r\n\ @param\ updateDownColor\ Colour\ for\ the\ value\ update\ animation\ for\ decreases\ in\ the\ rectangular\ bar's\ value.\r\n\ @param\ updateUpColor\ Colour\ for\ the\ value\ update\ animation\ for\ increases\ in\ the\ rectangular\ bar's\ value\r\n\ @param\ txtColor\ Colour\ for\ the\ rectangular\ bar's\ text\ display.\r\n
comment4.params=
comment4.target=void\ act()
comment4.text=\r\n\ Act\ -\ do\ whatever\ the\ OZDWStatBar\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment5.params=updatingHp\ newVal
comment5.target=void\ update(boolean,\ int)
comment5.text=\r\n\ Updates\ the\ OZDWStatBar's\ current\ value\ with\ a\ new\ value.\ Also\ updates\ the\ appearance\ of\ the\ OZDWStatBar\ accordingly.\r\n\ \r\n\ @param\ updatingHp\ True\ if\ the\ HP\ (rectangular)\ bar's\ values\ are\ being\ updated,\ false\ if\ the\ ability\ (circular)\ bar's\ values\ are\ being\ updated.\r\n\ @param\ newVal\ New\ value\ to\ update\ the\ OZDWStatBar\ with.\r\n
comment6.params=updatingHp\ newVal\ newMax
comment6.target=void\ update(boolean,\ int,\ int)
comment6.text=\r\n\ Updates\ the\ OZDWStatBar's\ current\ value\ and\ current\ maximum\ value\ with\ new\ values.\ Also\ updates\ the\ appearance\ of\ the\ OZDWStatBar\ accordingly.\r\n\ \r\n\ @param\ updatingHp\ True\ if\ the\ HP\ (rectangular)\ bar's\ values\ are\ being\ updated,\ false\ if\ the\ ability\ (circular)\ bar's\ values\ are\ being\ updated.\r\n\ @param\ newVal\ New\ value\ to\ update\ the\ OZDWStatBar\ with.\r\n\ @param\ newMax\ New\ maximum\ value\ to\ update\ the\ OZDWStatBar\ with.\r\n
comment7.params=
comment7.target=void\ soundCheck()
comment7.text=\r\n\ Checks\ to\ see\ if\ any\ sounds\ currently\ are\ playing\r\n\ or\ need\ to\ be\ playing/played.\r\n
comment8.params=
comment8.target=int\ getMaxChargeValue()
comment8.text=\r\n\ Gets\ the\ maximum\ charge\ value\ for\ this\ stat\ bar.\r\n\ \r\n\ @return\ int\ Maximum\ charge\ value\ (maxChargeVal)\r\n
comment9.params=
comment9.target=int\ getMaxHpValue()
comment9.text=\r\n\ Gets\ the\ maximum\ hp\ value\ for\ this\ stat\ bar.\r\n\ \r\n\ @return\ int\ Maximum\ HP\ value\ (maxHpVal).\r\n
numComments=10
